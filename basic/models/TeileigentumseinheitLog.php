<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "teileigentumseinheit_Log".
 *
 * @property string $id
 * @property integer $datenblatt_log_id
 * @property string $hausnr
 * @property integer $einheitstyp_id
 * @property integer $projekt_id
 * @property string $te_nummer
 * @property integer $gefoerdert
 * @property string $geschoss
 * @property string $zimmer
 * @property string $status
 * @property integer $rechnung_vertrieb
 * @property string $me_anteil
 * @property double $wohnflaeche
 * @property double $kaufpreis
 * @property double $kp_einheit
 *
 * @property double $forecast_preis
 * @property double $verkaufspreis
 * @property string $verkaufspreis_begruendung
 * @property integer $kaeufer_id
 *
 * @property Einheitstyp $einheitstyp
 * @property Projekt $projekt
 * @property DatenblattLog $datenblattLog
 * @property Kaeufer $kaeufer
 */
class TeileigentumseinheitLog extends \yii\db\ActiveRecord
{
    const STATUS_FREI = 'frei';
    const STATUS_RESERVIERT = 'reserviert';
    const STATUS_VERKAUFT   = 'verkauft';

    public static function statusOptions() {
        return [
            Haus::STATUS_FREI => 'Frei',
            Haus::STATUS_RESERVIERT => 'Reserviert',
            Haus::STATUS_VERKAUFT => 'Verkauft'
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'teileigentumseinheit_log';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['te_nummer', 'einheitstyp_id', 'status'], 'required'],
            [['datenblatt_log_id', 'einheitstyp_id', 'gefoerdert', 'rechnung_vertrieb'], 'integer'],
            [['kaufpreis', 'kp_einheit', 'wohnflaeche', 'forecast_preis', 'verkaufspreis', 'me_anteil'], 'number'],
            [['te_nummer'], 'string', 'max' => 255],
            [['hausnr', 'geschoss', 'zimmer', 'status'], 'string', 'max' => 45],
            [['forecast_preis', 'verkaufspreis', 'verkaufspreis_begruendung'], 'checkRequirement'],
        ];
    }

    public function checkRequirement($attribute, $params)
    {
        if ($this->forecast_preis != $this->verkaufspreis && strlen($this->verkaufspreis_begruendung) == 0) {
            $this->addError('verkaufspreis_begruendung', 'Das Feld "BegrÃ¼ndung" darf nicht leer sein');
        }
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'datenblatt_id' => Yii::t('app', 'Datenblatt ID'),
            'einheitstyp_id' => Yii::t('app', 'Einheitstyp'),
            'te_nummer' => Yii::t('app', 'Te Nummer'),
            'gefoerdert' => Yii::t('app', 'Gefoerdert'),
            'geschoss' => Yii::t('app', 'Geschoss'),
            'zimmer' => Yii::t('app', 'Zimmer'),
            'me_anteil' => Yii::t('app', 'Me Anteil'),
            'wohnflaeche' => Yii::t('app', 'WohnflÃ¤che'),
            'kaufpreis' => Yii::t('app', 'Kaufpreis'),
            'kp_einheit' => Yii::t('app', 'Kp Einheit'),
            'forecast_price' => Yii::t('app', 'Forecast'),
            'verkaufspreis' => Yii::t('app', 'Verkaufspreis'),
            'verkaufspreis_begruendung' => Yii::t('app', 'BegrÃ¼ndung'),
        ];
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

        if ($this->wohnflaeche > 0) {
            $this->kp_einheit = (float)$this->kaufpreis / (float)$this->wohnflaeche;
        } else {
            $this->kp_einheit = 0;
        }
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEinheitstyp()
    {
        return $this->hasOne(Einheitstyp::className(), ['id' => 'einheitstyp_id']);
    }
        /**
     * @return \yii\db\ActiveQuery
     */
    public function getKaeufer()
    {
        return $this->hasOne(Kaeufer::className(), ['id' => 'kaeufer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProjekt()
    {
        return $this->hasOne(Projekt::className(), ['id' => 'projekt_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDatenblattLog()
    {
        return $this->hasOne(DatenblattLog::className(), ['id' => 'datenblatt_log_id']);
    }

    public function getStatusLabel() {
        $label = '';
        if (isset(self::statusOptions()[$this->status])) {
            $label = self::statusOptions()[$this->status];
        }
        return $label;
    }
}
